package edu.umass.cs.iesl.protos;

message Document {
  // A unique id.
  required string id = 1;

  // The original text of the document without any preprocessing.
  required string text = 2;

  // A list of methods used to annotate / pre-process this document.
  repeated Method method = 3;

  // Tokens with annotations and binary relationships.
  repeated Token token = 5;
  
  // Non-binary relationships. // TODO: rename to 'compound_group'.
  repeated CompoundGroup compound = 6;
      
  // Types of annotations.
  enum AnnotationType {
    TEXT = 0; // Text representation of token.
    BOUNDARY = 1; // indicating boundary type of token
    TAG = 2; // Coarse grained abstraction of token dependent on context.
    CLUSTER = 3; // Abstraction of token independent of context.
    MORPHOLOGY = 4; // Morphological information.
    SYNTAX = 5; // A head to B // TODO: rename to 'SYNTAX'
    PROPERTY = 6; // Semantic relation. 
    ANTECEDENT = 7; // Pragmatic relation.
    CHUNK_FROM_TO = 8; // Grouping of words. // TODO: rename to 'CHUNK'
    CORPUS_STAT = 10; // Corpus wide count statistics.
    OTHER = 9;
  }
  
  message Method {
	required string annotation = 1;
	required string annotator = 2;
	required AnnotationType type = 3;
  }
  
  message Token {
    // Start character index in text, inclusive.
    required int32 start = 1;
    // End character index in text, exclusive.
    required int32 end = 2;
    // Annotations of this token.
    repeated Annotation annotation = 4;
  }
  
  message Annotation {
    // Type of the method.
    optional AnnotationType type = 1 [default = OTHER];
    // Index of the applied method.
    optional int32 method_index = 2;
    // Text representation of annotation.
    optional string text = 3;
    // Numerical representation of annotation.
    optional int32 val = 4;
    // Weight / confidence / strength of annotation.
    optional double weight = 8;
    // Target token for binary annotations.
    optional int32 target_token = 5;
    // Target compound for compound annotations;
    optional int32 compound_group = 6;
    // TODO: change to 'compound'
    optional int32 target_compound = 7;
  }
  
  message CompoundGroup {
    // Type of the method.
    optional AnnotationType type = 1 [default = OTHER];
    // Index of the applied method.
    optional int32 method_index = 2;
    // Compounds falling in this category.
    repeated Compound compound = 3;
  }
  
  message Compound {
    // Text representation of compound.
    optional string text = 1;
    // Text representation of the compound's type
    optional string type = 5;
    // Numerical representation of annotation.
    optional int32 val = 3;
    // Weight / confidence / strength of annotation.
    optional double weight = 4;
    // Slots with tokens.
    repeated CompoundSlot slot = 2;
    message CompoundSlot {
      optional string label = 1;
      // Start index of the token sequence of the slot, inclusive.
      required int32 start_token = 2;
      // End index of the token sequence of the slot, exclusive.
      required int32 end_token = 3;
    }
  }
}

message CorpusPB {
  repeated Document document = 1;
}
